# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login_page_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import mysql.connector
from PyQt5 import QtCore, QtGui, QtWidgets
from tkinter import*
import Easy_Dealer_Owner
import Easy_Dealer_Employee
from tkinter import ttk
from ttkthemes import themed_tk as tk


class Ui_Login_Window(object):
    def setupUi(self, Login_Window):
        def login_button_clicked():
            inputted_username = self.username_edit.text()
            inputted_password = self.password_edit.text()


            try:
                if inputted_username == '' and inputted_password == '':
                    self.error_label.setText('Enter a username and password')
                    self.error_label.setStyleSheet(u"background-color: rgb(255, 0, 0);\n"
                                                   "color: rgb(255, 255, 255);\n"
                                                   "border-radius: 5px;")
                elif inputted_username == '':
                    self.error_label.setText('Enter a username')
                    self.error_label.setStyleSheet(u"background-color: rgb(255, 0, 0);\n"
                                                   "color: rgb(255, 255, 255);\n"
                                                   "border-radius: 5px;")
                elif inputted_password == '':
                    self.error_label.setText('Enter a password')
                    self.error_label.setStyleSheet(u"background-color: rgb(255, 0, 0);\n"
                                                   "color: rgb(255, 255, 255);\n"
                                                   "border-radius: 5px;")
                elif self.owner_checkbox.isChecked():
                    db = mysql.connector.connect(host='localhost', user='root', passwd='', database='Easy_Dealer')
                    my_cursor = db.cursor()
                    query = f'SELECT * FROM user_table WHERE Designation = "Owner" AND UserName = "{inputted_username}"'
                    my_cursor.execute(query)
                    user_details = my_cursor.fetchall()

                    if len(user_details) == 0:
                        self.error_label.setText('Wrong username or password')
                        self.error_label.setStyleSheet(u"background-color: rgb(255, 0, 0);\n"
                                                       "color: rgb(255, 255, 255);\n"
                                                       "border-radius: 5px;")
                    else:
                        query = f'SELECT User_Password FROM user_table WHERE UserName = "{inputted_username}"'
                        my_cursor.execute(query)
                        result = my_cursor.fetchone()

                        if str(result[0]) != inputted_password:
                            self.error_label.setText('Wrong username or password')
                            self.error_label.setStyleSheet(u"background-color: rgb(255, 0, 0);\n"
                                                           "color: rgb(255, 255, 255);\n"
                                                           "border-radius: 5px;")
                        else:
                            Login_Window.hide()
                            owner = tk.ThemedTk()
                            owner.get_themes()
                            owner.set_theme('black')
                            EDO = Easy_Dealer_Owner.Owner(owner, inputted_username)
                elif not self.owner_checkbox.isChecked():
                    db = mysql.connector.connect(host='localhost', user='root', passwd='', database='Easy_Dealer')
                    my_cursor = db.cursor()
                    query = f'SELECT * FROM user_table WHERE UserName = "{inputted_username}" AND Designation NOT IN("Owner")'
                    my_cursor.execute(query)
                    user_info = my_cursor.fetchall()

                    if len(user_info) == 0:
                        self.error_label.setText('Wrong username or password')
                        self.error_label.setStyleSheet(u"background-color: rgb(255, 0, 0);\n"
                                                       "color: rgb(255, 255, 255);\n"
                                                       "border-radius: 5px;")
                    else:
                        query = f'SELECT User_Password FROM user_table WHERE UserName = "{inputted_username}"'
                        my_cursor.execute(query)
                        user_info = my_cursor.fetchone()

                        if str(user_info[0]) != inputted_password:
                            self.error_label.setText('Wrong username or password')
                            self.error_label.setStyleSheet(u"background-color: rgb(255, 0, 0);\n"
                                                           "color: rgb(255, 255, 255);\n"
                                                           "border-radius: 5px;")
                        else:
                            Login_Window.hide()
                            employee = tk.ThemedTk()
                            employee.get_themes()
                            employee.set_theme('black')
                            EDE = Easy_Dealer_Employee.Employee(employee, inputted_username)

            except Exception as e:
                print(e)

        Login_Window.setObjectName("Login_Window")
        Login_Window.setFixedSize(1280, 721)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("images/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Login_Window.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(Login_Window)
        self.centralwidget.setObjectName("centralwidget")
        self.login_background_label = QtWidgets.QLabel(self.centralwidget)
        self.login_background_label.setGeometry(QtCore.QRect(0, 0, 1280, 720))
        self.login_background_label.setText("")
        self.login_background_label.setPixmap(QtGui.QPixmap("images/Web 1920 â€“ 1.jpg"))
        self.login_background_label.setScaledContents(True)
        self.login_background_label.setObjectName("login_background_label")
        self.username_edit = QtWidgets.QLineEdit(self.centralwidget)
        self.username_edit.setGeometry(QtCore.QRect(723, 275, 320, 38))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(9)
        self.username_edit.setFont(font)
        self.username_edit.setStyleSheet("QLineEdit{\n"
"    border: 1px solid rgb(166, 166, 166);\n"
"    border-radius: 5px;\n"
"    padding: 10px;\n"
"    color: rgb(97, 97, 97);\n"
"}\n"
"QLineEdit:hover{\n"
"    border: 1px solid rgb(35, 36, 57);\n"
"}\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(35, 36, 57);\n"
"}")
        self.username_edit.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.username_edit.setObjectName("username_edit")
        self.password_edit = QtWidgets.QLineEdit(self.centralwidget)
        self.password_edit.setGeometry(QtCore.QRect(723, 360, 320, 38))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(9)
        self.password_edit.setFont(font)
        self.password_edit.setStyleSheet("QLineEdit{\n"
"    border: 1px solid rgb(166, 166, 166);\n"
"    border-radius: 5px;\n"
"    padding: 10px;\n"
"    color: rgb(97, 97, 97);\n"
"}\n"
"QLineEdit:hover{\n"
"    border: 1px solid rgb(35, 36, 57);\n"
"}\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(35, 36, 57);\n"
"}")
        self.password_edit.setEchoMode(QtWidgets.QLineEdit.Password)
        self.password_edit.setObjectName("password_edit")
        self.owner_checkbox = QtWidgets.QCheckBox(self.centralwidget)
        self.owner_checkbox.setGeometry(QtCore.QRect(723, 420, 76, 20))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Light")
        font.setPointSize(10)
        self.owner_checkbox.setFont(font)
        self.owner_checkbox.setStyleSheet("QCheckBox{\n"
"    color: rgb(35, 36, 57)\n"
"}\n"
"\n"
"QCheckBox::indicator{\n"
"    border: 1px solid rgb(112, 112, 112);\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"QCheckBox::indicator:hover{\n"
"    border: 2px solid rgb(163, 163, 163);\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked{\n"
"    border: 2px solid rgb(163, 163, 163);\n"
"    border-radius: 3px;\n"
"    background-color: rgb(62, 62, 62)\n"
"}")
        self.owner_checkbox.setObjectName("owner_checkbox")
        self.login_button = QtWidgets.QPushButton(self.centralwidget)
        self.login_button.setGeometry(QtCore.QRect(723, 470, 110, 35))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(12)
        self.login_button.setFont(font)
        self.login_button.setStyleSheet("QPushButton{\n"
"    color:rgb(255, 255, 255);\n"
"    background-color: rgb(35, 36, 57);\n"
"    border-radius: 8px;\n"
"}\n"
"QPushButton:hover{\n"
"    background-color: rgb(54, 56, 88);\n"
"}\n"
"QPushButton:pressed{\n"
"    color:rgb(35, 36, 57);\n"
"    background-color: rgb(255, 255, 255);\n"
"    border: 2px solid rgb(35, 36, 57);\n"
"}")
        self.login_button.setObjectName("login_button")
        self.login_button.clicked.connect(login_button_clicked)
        self.error_label = QtWidgets.QLabel(self.centralwidget)
        self.error_label.setGeometry(QtCore.QRect(723, 530, 241, 31))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(9)
        self.error_label.setFont(font)
        self.error_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 5px;")
        self.error_label.setAlignment(QtCore.Qt.AlignCenter)
        self.error_label.setObjectName("error_label")
        Login_Window.setCentralWidget(self.centralwidget)

        self.retranslateUi(Login_Window)
        QtCore.QMetaObject.connectSlotsByName(Login_Window)

    def retranslateUi(self, Login_Window):
        _translate = QtCore.QCoreApplication.translate
        Login_Window.setWindowTitle(_translate("Login_Window", "Easy Deal"))
        self.username_edit.setPlaceholderText(_translate("Login_Window", "USER"))
        self.password_edit.setPlaceholderText(_translate("Login_Window", "PASSWORD"))
        self.owner_checkbox.setText(_translate("Login_Window", "Owner"))
        self.login_button.setText(_translate("Login_Window", "Log In"))
        self.error_label.setText(_translate("Login_Window", "Username or password didn\'t match"))

#
# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     Login_Window = QtWidgets.QMainWindow()
#     ui = Ui_Login_Window()
#     ui.setupUi(Login_Window)
#     Login_Window.show()
#     sys.exit(app.exec_())
